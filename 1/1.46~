(define (iterative-improve good-enough? improve-guess)
	(lambda (x)
		(let (next-guess (improve-guess x))
		     (if (good-enough? next-guess x)
		     	 next-guess
			((iterative-improve good-enough? improve-guess) next-guess)
                     )
                )  
         )
)

(define tolerance 0.00001)

(define (close-enough? v1 v2)
    (< (abs (- v1 v2)) tolerance))

(define (fixed-point f first-guess)
  ((iterative-improve close-enough? f) first-guess)
)

(define (average a b) (/ (+ a b) 2))

(define (sqrt n)
	(fixed-point (lambda (y) (average y (/ x y))) 1.0)
)