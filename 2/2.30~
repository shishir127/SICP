(define (scale-tree tree func)
  (cond ((null? tree) nil)
        ((not (pair? tree)) (func tree))
        (else (cons (scale-tree (car tree) func)
                    (scale-tree (cdr tree) func)))
  )
)

(define (square tree)
	(scale-tree tree (lambda (x) (* x x)))
)


> (square-tree
 (list 1
       (list 2 (list 3 4) 5)
       (list 6 7)))
'(1 (4 (9 16) 25) (36 49))