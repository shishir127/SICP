(define (even? x)
	(if (not (null? x))
	    (= 0 (remainder x 2))
	    null
	)
)

(define (same-parity .arg)
	(let ((parity (car))
	     )
	     (define (iter input output)
	     	     (cond ((null? input) output)
			   ((= parity (even? (car input))) (iter (cdr input) (cons (car input) output)))
			   (else (iter (cdr input) output))
		     )
	     )
	     iter(arg null)
	)
)