(define (tree-map func tree)
	(cond((null? tree)     null)
	     ((list? (car tree))     (cons (tree-map func (car tree)) (tree-map func (cdr tree))
	     	     	  	     )
	     )
	     (else (cons (func (car tree)) (tree-map func (cdr tree))))
	)
)

(define (square x) (* x x))

(define test (list (list 1 2) (list 3 4)))
(define test2 (list (list 1 2) (list 3 (list 4 5))))

(tree-map square test)
(tree-map square test2)

'((1 4) (9 16))
'((1 4) (9 (16 25)))