(define (make-center-width c w)
  (make-interval (- c w) (+ c w)))
(define (center i)
  (/ (+ (lower-bound i) (upper-bound i)) 2))
(define (width i)
  (/ (- (upper-bound i) (lower-bound i)) 2))

(define (make-center-percent expected-val deviation-percentage)
	(let ((deviation (* deviation-percentage expected-val)))
	     (make-interval (- expected-val deviation) (+ expected-val deviation)
	     )
	)
)

(define (percentage intvl)
	(/ (- (upper-bound intvl) (lower-bound intvl))
	   (+ (upper-bound intvl) (lower-bound intvl))
	)
)

> (define test(make-center-percent 10 0.01))
> test
'(9.9 . 10.1)
> (center test)
10.0
> (percentage test)
0.009999999999999964