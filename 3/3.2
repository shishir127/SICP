(define (make-monitored func)
	(let ((count 0))
	 (define (mf arg)
		 (begin (set! count (+ count 1))
			(func arg)
		 )
	 )
	 (define (reset-count)
		(set! count 0)
	 )
	 (define (how-many-calls?)
		 count
	 )
	 (define (dispatch msg)
		(cond ((eq? msg 'reset-count)     (reset-count))
		      ((eq? msg 'how-many-calls?)     (how-many-calls?))
		      (else (mf msg))
		)
	 )
         dispatch)
)

(define (square x) (* x x))

(define test (make-monitored square))

(test 1)
(test 2)
(test 3)
(test 'how-many-calls?)
(test 'reset-count)
(test 4)
(test 5)
(test 'how-many-calls?)
